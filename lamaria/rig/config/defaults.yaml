paths:  
  base: /media/arialamar/
  seq_name: 5cp

  vrs: recordings/${paths.seq_name}.vrs
  estimate: estimates/${paths.seq_name}.txt

  mps: mps/mps_${paths.seq_name}_vrs/ # necessary if use_mps is true

  output:
    base: output/${paths.seq_name}/
    images: image_stream/

    keyframes: keyframes/
    kf_model: keyframe_recon/

    hloc: hloc/
    pairs_file: pairs.txt
    
    tri_model: triangulated_recon/
    optim_model: optim_recon/

    full_ts: timestamps/full.npy
    kf_ts: timestamps/keyframe.npy

    rect_imu: rect_imu.npy

sensor:
  camera_model: RAD_TAN_THIN_PRISM_FISHEYE

keyframing:
  max_rotation: 20.0
  max_distance: 1.0
  max_elapsed: 1e9 # 1 second in ns

triangulation:
  feature_conf: aliked-n16
  matcher_conf: aliked+lightglue
  retrieval_conf: netvlad
  num_retrieval_matches: 5

  # relaxed triangulation
  # https://github.com/colmap/colmap/blob/dbdb3cd5a9a90a01b7e1096905ba2ffc34a68b82/src/colmap/sfm/incremental_triangulator.h
  merge_max_reproj_error: 4.0
  complete_max_reproj_error: 4.0
  min_angle: 1.5
  
  # https://github.com/colmap/colmap/blob/dbdb3cd5a9a90a01b7e1096905ba2ffc34a68b82/src/colmap/sfm/incremental_mapper.h
  filter_max_reproj_error: 4.0
  filter_min_tri_angle: 1.5

optimization:
  use_callback: true
  max_num_iterations: 10
  normalize_reconstruction: false
  
  feature_std: 1.0
  optimize_cam_intrinsics: false
  optimize_cam_from_rig: false
  
  optimize_scale: false
  optimize_gravity: false
  optimize_imu_from_rig: false
  optimize_bias: false
  gyro_infl: 20.0
  acc_infl: 1.0
  integration_noise_density: 0.05

mps:
  use_mps: false
  use_online_calibration: false # relevant only when use_mps is true (for online calib file)
  has_slam_drops: false # check vrs json metadata file for each sequence
